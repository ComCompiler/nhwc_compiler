 1    Define main _s0 [] -> main_ret _s0 
         5    Alloc i32 %x0 = 4 _s0 
     15   label while.head _s9: 
         21   x1 = phi [x0,instr:5],[x2,instr:13], 
         17   Alloc i1 %temp_30 
         18   temp_31 = icmp i1 Slt x1, 17 _s0 
         19   br i1 temp_31, label while.body _s9, label while.exit _s9 
     14   label while.body _s9: 
         11   Alloc i32 %temp_20 
         12   temp_21 = Add i32 x1, 1 _s0 
         13   x2 = temp_21 
         20   jump label: while.head _s9 
     16   label while.exit _s9: 
         6    Alloc i32 %temp_10 
         7    temp_11 =  Call i32 square _s0(5 _s0) 
         8    Alloc i32 %b0 = temp_11 
         9    breakpoint exit _s13 ! 
         10   ret 0 _s0 
 0    Define square _s0 [num0] -> square_ret _s0 
         2    Alloc i32 %temp_00 
         3    temp_01 = Mul i32 num0, num0 
         4    ret temp_01 
