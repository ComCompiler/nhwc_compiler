 1    Define f _s0 [] -> f_ret _s0 
         38   alloc i32 a _s17 
         40   alloc i32 b _s17 
         42   alloc i32 temp_6 _s17 
         45   alloc i32 d _s17 
         47   alloc i32 temp_7 _s25 
         50   alloc i32 temp_8 _s25 
         53   alloc i32 temp_9 _s25 
         56   alloc i32 temp_10 _s25 
         59   alloc i32 c _s25 
         63   alloc i1 temp_11 _s20 
         69   alloc i1 temp_12 _s23 
         37   new_var i32 %a0 = 3 _s0 
         39   new_var i32 %b0 = 4 _s0 
         62   new_var i1 %temp_110 
         64   temp_111 = icmp i1 Slt a0, 4 _s0 
         65   br i1 temp_111, label branch.true: _s21, label branch.false: _s21 
     60   label branch.true: _s21: 
         68   new_var i1 %temp_120 
         70   temp_121 = icmp i1 Sgt a0, 0 _s0 
         71   br i1 temp_121, label branch.true: _s24, label branch.false: _s24 
     66   label branch.true: _s24: 
         46   new_var i32 %temp_70 
         48   temp_71 = Add i32 a0, b0 
         49   new_var i32 %temp_80 
         51   temp_81 = Mul i32 temp_71, 2 _s0 
         52   new_var i32 %temp_90 
         54   temp_91 = Div i32 1 _s0, temp_81 
         55   new_var i32 %temp_100 
         57   temp_101 = Add i32 temp_91, 6 _s0 
         58   new_var i32 %c0 = temp_101 
     67   label branch.false: _s24: 
     61   label branch.false: _s21: 
         41   new_var i32 %temp_60 
         43   temp_61 = Mul i32 a0, b0 
         44   new_var i32 %d0 = temp_61 
 0    Define main _s0 [] -> main_ret _s0 
         3    alloc i32 i _s2 
         5    alloc i32 j _s2 
         7    alloc i32 temp_0 _s13 
         10   alloc i32 sum _s13 
         13   alloc i32 temp_1 _s11 
         17   alloc i32 temp_2 _s7 
         20   alloc i32 temp_3 _s7 
         27   alloc i1 temp_4 _s5 
         34   alloc i1 temp_5 _s9 
         2    new_var i32 %i0 = 0 _s0 
         4    new_var i32 %j0 = 2 _s0 
     24   label while.head _s6: 
         73   i1 = phi [i0,instr:2],[i4,instr:22], 
         26   new_var i1 %temp_40 
         28   temp_41 = icmp i1 Slt i1, 3 _s0 
         29   br i1 temp_41, label while.body _s6, label while.exit _s6 
     23   label while.body _s6: 
         16   new_var i32 %temp_20 
         18   temp_21 = i1 
         19   new_var i32 %temp_30 
         21   temp_31 = Add i32 i1, 1 _s0 
         22   i4 = temp_31 
         30   jump label: while.head _s6 
     25   label while.exit _s6: 
         33   new_var i1 %temp_50 
         35   temp_51 = icmp i1 Sgt i1, 0 _s0 
         36   br i1 temp_51, label branch.true: _s10, label branch.false: _s10 
     31   label branch.true: _s10: 
         12   new_var i32 %temp_10 
         14   temp_11 = Add i32 i1, 2 _s0 
         15   i3 = temp_11 
     32   label branch.false: _s10: 
         6    new_var i32 %temp_00 
         8    temp_01 = Add i32 i1, j0 
         9    new_var i32 %sum0 = temp_01 
         72   i2 = phi [i1,instr:73],[i3,instr:15], 
         11   ret 0 _s0 
